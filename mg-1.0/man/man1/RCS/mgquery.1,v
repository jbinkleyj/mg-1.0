head	1.5;
access;
symbols;
locks
	beebe:1.5; strict;
comment	@# @;


1.5
date	94.05.16.07.09.54;	author beebe;	state Exp;
branches;
next	1.4;

1.4
date	94.05.16.05.26.46;	author beebe;	state Exp;
branches;
next	1.3;

1.3
date	94.05.15.22.20.53;	author beebe;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.01.09.18;	author beebe;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.01.07.00;	author beebe;	state Exp;
branches;
next	;


desc
@@


1.5
log
@*** empty log message ***
@
text
@.TH mgquery 1 "15 May 1994"
.SH NAME
mgquery \- query program for the mg system
.SH SYNOPSIS
.B mgquery
[
.B \-h
]
[
.B \-D
]
[
.BI \-f " name"
]
[
.BI \-d " directory"
]
.if n .ti +9n
[
.I collection-name
]
.SH DESCRIPTION
.B mgquery
enables users to make Boolean or ranked queries from a data base
generated by the
.BR mg (1)
system.  It accepts queries from
.I stdin
and sends the retrieved documents to
.IR stdout .
Information on the resource usage of
.B mgquery
as it processes queries can be obtained interactively.
.SH OPTIONS
Options may appear in any order, but the
.IR collection-name ,
if specified, must be last.
.TP "\w'\fB\-d\fP \fIdirectory\fP'u+2n"
.B \-h
This displays a usage line on
.IR stderr .
.TP
.B \-D
This option causes the entire text to be decompressed and sent to
.IR stdout .
.TP
.BI \-f " name"
This specifies the base name of the document collection that will be
used.  If a collection with the specified base
.I name
does not exist, an error message will be displayed and
.B mgquery
will exit.
.TP
.BI \-d " directory"
This specifies the directory where the document collection can be found.
.SH USAGE
Prior to processing the command line arguments, the
.B mgquery
program attempts to read in a startup script called
.IR ./.mgrc .
If that fails, it attempts to read in the file
.IR $HOME/.mgrc .
The startup file can only contain commands\(emno queries are
permitted in the
.I .mgrc
file.  Lines starting with \*(lq\fB#\fP\*(rq in the file are comments.
The most common use for the
.I .mgrc
file is to personalise the initial values of the predefined parameters
with
.B .set
commands.
.LP
The input to
.B mgquery
consists of a series of input lines.  The backslash
character
.RB (\*(lq \e \*(rq)
is used at the end of lines to indicate
that input continues on the next line.
.LP
Input lines on which the first character is a dot
.RB (\*(lq . \*(rq)
are commands to the
.B mgquery
program.  Input lines that do not start with a dot are queries.
.LP
A query consists of two parts.  One part is a Boolean or ranked query
that identifies documents.  The second part is a post-processing
pattern matching operation.  Any text between the first speech mark
(\*(lq) and the last speech mark (\*(rq) is considered to be a
post-processing pattern.
.SH COMMANDS
The
.B mgquery
program can accept the following commands.
.TP 17
.B .help
Display several pages of help text.
.TP
.B .quit
Quit the program.
.TP
.B .warranty
Display the
.BR mg (1)
warranty.
.TP
.B .conditions
Display the conditions of use and distribution of
.BR mg (1).
.TP
.BI ".set " "name value"
Set the parameter
.I name
to the specified
.IR value .
If the parameter is a Boolean
.I value
and the
.I value
is omitted, the parameter will be inverted (i.e., if it was
.IR true ,
then it will change to
.IR false ;
if it was
.IR false ,
then it will change to
.IR true ).
.TP
.BI ".unset " name
Delete the parameter
.I name
from the currently-defined parameters.
.TP
.B .reset
Reset the parameters to the state that they had after the processing
of the
.B mgquery
command line.
.TP
.B .display
Display the values of all the currently-defined parameters.
.TP
.B .push
Push the currently-defined parameters onto a stack.
.TP
.B .pop
Pops a set of parameters off the stack, replacing the currently-defined
ones.
.TP
.BI ".output " arg
This is used to specify where to send the text of the documents.  Once
the
.B .output
command is specified, all subsequent output will be sent to the place
specified by
.IR arg .
If
.I arg
is not specified subsequent output will be directed to
.IR stdout .
.I Arg
may be any of the following.
.RS
.TP 13
.BI "> " filename
Send output to the specified file.
.TP
.BI ">> " filename
Append output to the specified file.
.TP
.BI "| " command
Pipe the output to
.IR command ,
which is executed by
.IR sh .
.RE
.TP
.BI ".input " arg
This is used to specify where input (queries and commands) comes
from.  Once the
.B .input
command is specified all subsequent input will be come from the place
specified by
.IR arg .
If
.I arg
is not specified subsequent input will come from
.IR stdin .
.RS
.TP 13
.BI "< " filename
Get input from the specified file.
.TP
.BI "| " command
The input comes from the standard output of
.IR command ,
which is executed by
.IR sh .
.RE
.SH PARAMETERS
The following parameters are predefined and have special
significance.  Each parameter will be followed by its default
value.  Parameters are initialised before the
.I .mgrc
file is read or the command line arguments are processed.
.TP 17
.BI accumulator_method " `array'"
This parameter is used during ranking, and specifies how the
weight for each document should be accumulated.  The following
methods are available:
.IR array ,
.IR splay_tree ,
.IR hash_table ,
and
.IR list .
.TP
.BI briefstats " `off'"
This is a Boolean parameter that determines whether the
totals for disk, memory and time usage statistics will be
displayed at the end of each query.
.IR Note :
this takes precedence over the parameters
.BR diskstats ,
.BR memstats " and " timestats .
This parameter may take the values
.IR yes ", " no ", "
.IR true ", " false ", "
.IR on " or " off .
.TP
.BI buffer " `1048576'"
When the documents are being read in, they are read into a
buffer of this size and then displayed from this buffer.  If
the documents are larger than this buffer, the buffer is
expanded automatically.  Having a large buffer gives a very
slight performance improvement, because it allows the order of
disk operations to be optimised.  The buffer size is measured
in bytes.
.TP
.BI diskstats " `off'"
This is a Boolean parameter that determines whether the disk
usage statistics for the preceding query will be displayed
after each query.  This parameter may take the values
.IR yes ", " no ", "
.IR true ", " false ", "
.IR on " or " off .
.TP
.BI doc_sepstr " `---------------------------------- %n\en\'"
This specifies the string that will be used to separate
documents when they are displayed for `Boolean' or `docnums'
queries.  The standard C escape character sequences
may be used to place special characters in the
string.  For example, a newline would be `\en'.  To include a `%',
use the sequence `%%'.  To include the
.BR mg (1)
document number, use the sequence `%n'.  The following escape character
sequences are available
.nf
.ta 1.7iL
.B Sequence	Meaning
`\e\e'	backslash
`\eb'	backspace
`\ef'	formfeed
`\en'	newline
`\er'	carriage return
`\et'	tab
`\e"'	speech marks
`\e''	quote mark
`\ex\fIhh\fP'	ASCII code in hexadecimal
`\ennn'	ASCII code in octal
.fi
.TP
.BI expert " `false'"
If this is
.IR true ,
then much of the dialogue output is suppressed.  This parameter may
take the values
.IR yes ", " no ", "
.IR true ", " false ", "
.IR on " or " off .
.TP
.BI hash_tbl_size " `1000'"
One of the options during ranking queries is to use a hash
table to accumulate the weights for each document.  The hash
table is a simple chained type.  This parameter specifies the
size of the hash table and may take any value between 8 and
268435456 (2^28).
.TP
.BI heads_length " `50'"
When the mode is
.BR heads ,
this specifies the number of characters that will be output for each
document.
.TP
.BI maxdocs " `all'"
The maximum number of documents to display in response to a
query.  This parameter may take on a numeric value between 1
and 429467295 (2^32 - 1) or the word
.IR all .
.TP
.BI maxparas " `1000'"
The maximum number of paragraphs to identify during a ranked
query with paragraph indexing.  After the paragraphs have been
identified, the paragraphs are converted into documents, and
because some of the paragraphs may refer to the same documents
the final number of answers may be less than
.BR maxparas .
The
.B maxdocs
parameter will then be applied.  This parameter may take on a numeric
value between 1 and 429467295 (2^32 - 1).
.TP
.BI max_accumulators " `50000'"
This parameter limits the number of different paragraph and
document numbers to be accumulated during ranked queries when
the parameter
.B accumulator_method
is set to
.IR splay_tree ,
.IR hash_table ,
or
.IR list .
This parameter may take any value between 8 and 268435456 (2^28).
.TP
.BI max_terms " `all'"
This parameter limits the number of terms that will actually
be used during a ranked query.  If more terms than the number
specified by
.B max_terms
are entered, then the extra terms will be discarded.  If
.B sorted_terms
is on, then the limiting will be done after the terms have been
sorted.  This parameter may take any value between 1 and 429467295
(2^32 - 1), or the word
.IR all.
.TP
.BI memstats " `off'"
This is a Boolean parameter that determines whether the memory
usage statistics for the preceding query will be displayed
after each query.  This parameter may take the values
.IR yes ", " no ", "
.IR true ", " false ", "
.IR on " or " off .
.TP
.BI mgdir " `.'"
This is set to the directory where the
.BR mg (1)
data files may be found.  If
the environment variable
.B MGDATA
exists, then this is instead initialised to the value of
.BR MGDATA .
The value of this parameter may be changed, either in the
.I .mgrc
file with a
.BI ".set mgdir "directory
command, or from the command line using the
.BI \-d " directory"
option.  Once the \*(lq\fB>\fP\*(rq prompt appears, changing this
parameter will have no effect.
.TP
.BI mgname " `bible'"
This is set to the name of the
.BR mg (1)
collection that is to be used for the session.  The value of this
parameter may be changed, either in the
.I .mgrc
file with a
.BI ".set mgname "name
command, or from the command line using the
.BI \-f " name"
option.  Once the \*(lq\fB>\fP\*(rq prompt appears, changing this
parameter will have no effect.
.TP
.BI mode " `text'"
This specifies how documents should be displayed when they
are retrieved.  It may take five different values:
.IR text ,
.IR docnums ,
.IR heads ,
.IR silent ,
or
.IR count .
.I text
displays the contents of the document.
.I docnums
displays only the document numbers.
.I heads
is used to print out the head of each document.
.I silent
retrieves all the documents but displays nothing except how many
documents were retrieved.  This mode is intended to be used in timing
experiments.
.I count
does the minimum
amount of work required to determine how many documents would
be retrieved, but does not retrieve them.
.TP
.BI pager " `more'"
This is the name of the program that will be used to display
the help and the retrieved documents.  If the environment
variable
.B PAGER
is defined, then
.B pager
takes on that value.
.TP
.BI para_sepstr " `\en######## PARAGRAPH %n ########\en'"
This specifies the string that will be used to separate paragraphs.
The standard C escape character sequences may be used to place special
characters in the string.  For example, a newline would be written
as `\en'.  To include a `%', use the sequence `%%'.  To include the
paragraph number within the document, use the sequence `%n'.
.TP
.BI para_start " `***** Weight = %w *****\en'"
This specifies the string that will be used at the head of paragraphs
for a paragraph-level index following a ranked query.  The standard
C-language escape character sequences may be used to place special
characters in the string.  For example, a newline would be written as
`\en'.  To include a `%', use the sequence `%%'.  To include the
paragraph weight, use the sequence `%w'.
.TP
.BI qfreq " `true'"
This determine whether the ranked queries will take into account the
number of times each query term is specified.  When this is
.IR true ,
the number of times a term appears in the query is used in the
ranking.  When this is
.IR false ,
all query terms are assumed to occur only once.  This parameter may
take the values
.IR yes ", " no ", "
.IR true ", " false ", "
.IR on " or " off .
.TP
.BI query  " `Boolean'"
This specifies the type of queries that are to be specified.
It can take four different values:
.IR Boolean ,
.IR ranked ,
.IR docnums " or " approx-ranked.
.I Boolean
is for Boolean queries.
The
.BR yacc (1)
grammar for Boolean queries is as follows.
.IP
.nf
        query   : or;
.IP
        or      : or '|' and
                | and ;
.IP
        and     : and '&' not
                | and not
                | not ;
.IP
        not     : term
                | '!' not ;
.IP
        term    : TERM
                | '(' or ')' ;
.fi
.IP
.IR ranked " and " approx-ranked
are for queries ranked by the cosine measure.
.I approx-ranked
uses only the low-precision document lengths, and therefore only
produces an approximation to full cosine ranking.
.IP
.nf
        query   : TERM
                | query TERM ;
.fi
.IP
.I docnums
allows the entry of document numbers.  Multiple numbers separated by
spaces may be specified, or ranges separated by hyphens.
.IP
.nf
        query   : range
                | query range ;
.IP
        range   : num
                | num '-' num ;
.fi
.TP
.BI ranked_doc_sepstr " `-------------------------------- %n %w\en'"
This specifies the string that will be used to separate documents when
they are displayed for `ranked' or `approx-ranked' queries.  The
standard C escape character sequences may be used to place special
characters in the string.  For example, a newline would be written as
`\en'.  To include a `%', use the sequence `%%'.  To include the
.BR mg (1)
document number, use the sequence `%n'.  To include the document
weight, use the sequence `%w'.
.TP
.BI sizestats " `false'"
If this is
.IR true ,
then various numbers are output at the end of each query indicating
what went on during the query.  This parameter may take the values
.IR yes ", " no ", "
.IR true ", " false ", "
.IR on " or " off .
.TP
.BI skip_dump " `skips.%d'"
If this parameter is set, then a file will be produced in the current
directory during ranked queries on skipped inverted files when
.B accumulator_method
is set to
.IR splay_tree ,
.IR hash_table ,
or
.IR list .
The name of the file is the value of this parameter.  A `%d' in the
file name will be replaced with the process id of
.BR mgquery .
This file will contain information about the usage of skips during the
query processing.  This option is expensive; use
.B .unset skip_dump
to obtain optimal performance.
.TP
.BI sorted_terms " `on'"
This specifies whether or not the terms should be sorted into
decreasing occurrence in documents so that the least-often occurring
terms are processed first when ranked queries are being done.  When
this is
.IR true ,
the terms are sorted.  When this is
.IR false ,
the terms are not sorted, and are instead processed in order of
occurrence.  This parameter may take the values
.IR yes ", " no ", "
.IR true ", " false ", "
.IR on " or " off .
.TP
.BI stop_at_max_accum " `on'"
This specifies what should happen when the maximum number of
accumulators set by
.B max_accumulators
is reached.  When this is
.IR true ,
the processing of terms is stopped at the completion of the current
term.  When this is
.IR false ,
processing continues but no new accumulators are created.  This
parameter may take the values
.IR yes ", " no ", "
.IR true ", " false ", "
.IR on " or " off .
.TP
.BI terminator " `'"
This specifies the string that will be output after the last document
from the previous query has been output.  The standard C escape
character sequences may be used to place special characters in the
string.  For example, a newline would be written as `\en'.  To include
a `%', use the sequence `%%'.
.TP
.BI timestats " `false'"
If this is
.IR true ,
then the time to process a query is displayed in both real time and
CPU time.  This parameter may take the values
.IR yes ", " no ", "
.IR true ", " false ", "
.IR on " or " off .
.TP
.BI verbatim " `off'"
This is a Boolean parameter that determines whether the program
should attempt to do a regular-expression match on the retrieved
text.  If verbatim is
.I on
and a post-processing string is specified with the query, then the
post-processing string will be searched for in the documents just
before they are displayed.  If the string is found, the document will
be displayed; if not, the document will not be displayed.  If verbatim
is
.IR off ,
the post-processing string will be considered a regular expression
as in
.BR egrep (1)
or
.BR vi (1).
E.g., if verbatim is
.I on,
\*(lq\fBand.*the\fP\*(rq will look for the 8-character sequence
\*(lq\fBand.*the\fP\*(rq.  If verbatim is
.IR off ,
\*(lq\fBand.*the\fP\*(rq will look for the sequence
\*(lq\fBand\fP\*(rq followed somewhere later in the document by the
sequence \*(lq\fBthe\fP\*(rq.  This parameter may take the values
.IR yes ", " no ", "
.IR true ", " false ", "
.IR on " or " off .
.SH ENVIRONMENT
.TP "\w'\fBMGDATA\fP'u+2n"
.SB MGDATA
If this environment variable exists, then its value is used as the
default directory where the
.BR mg (1)
collection files are.  If this variable does not exist, then the
directory \*(lq\fB.\fP\*(rq is used by default.  The command line
option
.BI \-d " directory"
overrides the directory in
.BR MGDATA .
.SH FILES
.TP 20
.I .mgrc
.B mgquery
startup file
.TP
.B help.mg
Help file for
.BR mgquery .
The contents of this file is displayed with the
.B .help
command.
.TP
.B *.invf
Inverted file.
.TP
.B *.invf.dict
The `on-disk' stemmed dictionary.
.TP
.B *.text
Compressed documents.
.TP
.B *.text.dict
Compression dictionary.
.TP
.B *.text.idx
Index into the compressed documents.
.TP
.B *.text.idx.wgt
Interleaved index into the compressed documents and document weights.
.TP
.B *.weight.approx
Approximate document weights.
.SH "SEE ALSO"
.na
.BR egrep (1),
.BR mg (1),
.BR mg_compression_dict (1),
.BR mg_fast_comp_dict (1),
.BR mg_get (1),
.BR mg_invf_dict (1),
.BR mg_invf_dump (1),
.BR mg_invf_rebuild (1),
.BR mg_passes (1),
.BR mg_perf_hash_build (1),
.BR mg_text_estimate (1),
.BR mg_weights_build (1),
.BR mgbilevel (1),
.BR mgbuild (1),
.BR mgdictlist (1),
.BR mgfelics (1),
.BR mgstat (1),
.BR mgtic (1),
.BR mgticbuild (1),
.BR mgticdump (1),
.BR mgticprune (1),
.BR mgticstat (1),
.BR vi (1),
.BR yacc (1).
@


1.4
log
@*** empty log message ***
@
text
@d6 16
a21 7
.RB [ \-h ]
.RB [ \-D ]
.RB [ \-f
.IR " name" ]
.RB [ \-d
.IR " directory" ]
.RI [ collection-name ]
a37 1
.PP
d644 1
@


1.3
log
@*** empty log message ***
@
text
@d364 1
a364 1
command or from the command line using the
@


1.2
log
@Correct two doubled word errors.
@
text
@d1 1
a1 1
.TH mgquery 1 "7 February 1994"
d8 5
a12 5
.RB [ \-f 
.IR name ]
.RB [ \-d 
.IR directory ]
.RB [ collection-name ]
a13 1
.LP
d15 1
a15 1
enables users to make boolean or ranked queries from a data base
d17 6
a22 3
.B mg
system. It accepts queries from stdin or files and sends the retrieved 
documents to either stdout or a file. Information on the resource usage of 
d24 1
a24 1
as it processes queries can be obtained. 
d26 1
a26 2
.LP
Options may appear in any order, but the 
d29 2
a30 2
.RS
.TP
d32 2
a33 1
This displays a usage line on the screen.
d36 2
a37 1
This option causes the entire text to be decompressed and sent to stdout.
d39 3
a41 3
.BI \-f name
This specifies the base name of the document collection that will be used.
If a collection with the specified base
d43 1
a43 1
does not exist an error message will be displayed and 
d47 1
a47 1
.BI \-d directory
d50 1
a50 2
.LP 
Prior to processing the command line arguments the 
d52 12
a63 11
program attempts to read in a startup script called 
.BR ./.mgrc .
If that fails it attempts to read in the file 
.BR ~/.mgrc .
The startup file can only contain commands i.e. no queries are permitted in 
the 
.B .mgrc
file. Lines starting with \*(lq\fB#\fP\*(rq in the file are considered
comments. The most common use for the 
.B .mgrc
file is to personalise the initial values of the predefined parameters with 
d65 1
a65 1
commands. 
d67 7
a73 5
The input to 
.B mgquery 
consists of a series of input lines. The backslash
character (\*(lq\fB\\\fP\*(rq) is used at the end of lines to indicate that input 
continues on the next line.
d75 5
a79 2
Input lines on which the first character is a dot (\*(lq\fB.\fP\*(rq) are commands to
the mgquery program. Input lines that do not start with a dot are queries.
d81 5
a85 4
A query consists of two parts. One part is a boolean or ranked query that
identifies documents. The second part is a post-processing pattern matching
operation. Any text between the first speech mark (\*(lq) and the last speech
mark is considered to the a post-processing pattern. 
d87 1
a87 2
.LP
The 
d89 1
a89 1
program can accept the following commands. 
d95 1
a95 1
Quits the program.
d98 3
a100 1
Displays the mg warranty.
d103 2
a104 1
Displays the conditions of use and distribution of mg.
d109 5
a113 3
to the specified 
.I value.
If the parameter is a boolean 
d115 8
a122 4
and the 
.I value 
is omitted the parameter will be inverted (i.e. If it was true then it will change to 
false, if it was false then it will change to true).
d125 1
a125 1
Delete the parameter 
d127 1
a127 1
from the currently defined parameters.
d130 2
a131 1
Reset the parameters to the state that they had after the processing of the 
d136 1
a136 1
Display the values of all the currently defined parameters.
d139 1
a139 1
Push the currently defined parameters onto a stack.
d142 2
a143 1
Pops a set of parameters off the stack replacing the currently defined ones.
d146 2
a147 1
This is used to specify where to send the text of the documents. Once the 
d149 4
a152 3
command is specified all subsequent output will be sent to the place specified by 
.I arg.
If 
d154 2
a155 1
is not specified subsequent output will be directed to stdout.
a161 1
.PD 0
d167 4
a170 5
The output is piped by 
.I command,
which is executed by 
.I sh.
.PD
d174 2
a175 2
This is used to specify where input (queries and commands) comes from. Once 
the 
d177 4
a180 4
command is specified all subsequent input will be come from the place 
specified by 
.I arg.
If 
d182 2
a183 1
is not specified subsequent input will come from stdin.
a187 1
.PD 0
d190 4
a193 5
The input comes from the standard output of 
.I command,
which is executed by 
.I sh.
.PD
d196 5
a200 1
The following parameters are predefined and have special significance. Each parameter will be followed by its default value. Parameters are initialised before the .mgrc file is read or the command line arguments are processed.
d204 2
a205 2
weight for each document should be accumulated. The following
methods are available 
d213 5
a217 4
This is a boolean parameter that determines whether the
totals for disk, memory and time usage statistics will be 
displayed. at the end of each query. 
NOTE: this takes precedence over the parameters 
d220 2
a221 2
This parameter may take the values 
.IR yes ", " no ", " 
d226 6
a231 6
When the documents are being read in they are read into a 
buffer of this size and then displayed from this buffer. If 
the documents are larger than this buffer the buffer is
expanded automatically. Having a large buffer gives a very
slight performance improvement because it allows the order of 
disk operations to be optimised. The buffer size is measured
d235 1
a235 1
This is a boolean parameter that determines whether the disk
d237 2
a238 2
after each query. This parameter may take the values
.IR yes ", " no ", " 
d243 9
a251 9
This specifies the string that will be used to separate 
documents when they are displayed for `boolean' or `docnums'
queries. The standard C escape character sequences 
may be used to place special characters in the 
string. For example, a newline would be `\en'. To include a `%'
use the sequence `%%'. To include the MG document number use
the sequence `%n'.
The following escape character sequences are available

d261 4
a264 4
`\e"'	Speech marks
`\e''	Quote mark
`\ex\fIhh\fP'	Ascii code in hexadecimal
`\ennn'	Ascii code in octal
d266 1
a266 1
.TP	
d268 5
a272 3
If this is true then a lot of the waffle that the program 
spits out is suppressed. This parameter may take the values
.IR yes ", " no ", " 
d277 3
a279 3
One of the options during ranking queries is to use a hash 
table to accumulate the weights for each document. The hash 
table is a simple chained type. This parameter specifies the 
d281 1
a281 1
268435456. 
d284 4
a287 4
When the mode is 
.B heads
 this specifies the number of 
characters that	will be output for each document.
d291 2
a292 2
query. This parameter may take on a numeric value between 1 
and 429467295 or the word 
d297 9
a305 6
query with paragraph indexing. After the paragraphs have been
identified the paragraphs are converted into documents, and 
because some of the paragraphs may refer to the same documents 
the final number of answers may be less that maxparas. The 
maxdocs parameter will then be applied. This parameter may 
take on a numeric value between 1 and 429467295.
d308 5
a312 5
This parameter limits the number of different paragraph/
document numbers to be accumulated during ranked queries when 
the parameter 
.B accumulator_method 
is set to 
d314 1
a314 1
.IR hash_table , 
d317 1
a317 1
This parameter may take any value between 8 and 268435456.
d321 4
a324 3
be used during a ranked query. If more terms than the number
specified by max_terms are entered, then the extra terms will
be discarded. If 
d326 3
a328 3
is on then the limiting will 
be done after the terms have been sorted. This parameter may
take any value between 1 and 429467295 or the word 
d332 1
a332 1
This is a boolean parameter that determines whether the memory 
d334 2
a335 2
after each query. This parameter may take the values
.IR yes ", " no ", " 
d340 10
a349 4
This is set to the directory where the mg data files may be found. If the
environment variable \*(lq\fBMGDATA\fP\*(rq exists then this is instead 
initialised to the value of \*(lq\fBMGDATA\fP\*(rq. The value of this 
parameter may be changed either in the .mgrc file with a 
d351 5
a355 5
command or from the command line using the
.BI -d directory
option. Once the \*(lq\fB>\fP\*(rq prompt appears changing this parameter will 
have no effect.
.TP 
d357 6
a362 1
This is set to the name of the mg collection that is to be used for the session. The value of this parameter may be changed either in the .mgrc file with a 
d365 4
a368 4
.BI -f name
option. Once the \*(lq\fB>\fP\*(rq prompt appears changing this parameter will 
have no effect.
.TP 
d371 2
a372 2
are retrieved it may take four different values 
.IR text , 
d374 1
d376 2
a377 1
.IR heads " or " count . 
d385 3
a387 3
retrieves all the documents but displays nothing 
except how many documents were retrieved. This mode is intended
to be used in timing experiment. 
d395 2
a396 2
the help and the retrieved documents. If the environment 
variable 
d398 1
a398 1
is defined then 
d401 1
a401 1
.TP 
d403 6
a408 6
This specifies the string that will be used to separate 
paragraphs. The standard C escape character sequences may be used to place special characters in the 
string. For example, a newline would the `\en'. To include a `%'
use the sequence `%%'. To include the paragraph number within
the document use the sequence `%n'.
.TP 
d410 6
a415 7
This specifies the string that will be used at the head of 
paragraphs for a paragraph level index following a ranked query.
The standard C escape character sequences 
may be used to place special characters in the string. For 
example, a newline would the `\n'. To include a `%' use the
sequence `%%'. To include the paragraph weight use the 
sequence `%w'.
d418 9
a426 6
This determine whether the ranked queries will take into 
account the number of times each query term is specified.
When this is `true' the number of times a term appears in
the query is used in the ranking. When this is `false' all 
query term are assumed to occur only once. This parameter may take the values
.IR yes ", " no ", " 
d430 1
a430 1
.BI query  " `boolean'"
d432 11
a442 9
It can take four different values 
.IR boolean ,
.IR ranked , 
.IR docnums " or " approx-ranked. 
 
.I boolean
is for boolean queries. 
The yacc grammar for boolean queries is as follows.
 
d444 1
a444 1

d447 1
a447 1
 
d451 1
a451 1
 
d454 1
a454 1
 
d457 2
a458 4
 
 
 
 
d460 1
a460 1
are for queries ranked by the cosine measure. 
d462 1
a462 1
uses only the low precision document lengths, and therefore only
d464 2
a465 1
 
d468 2
a469 1
 
d471 4
a474 5
allows the entry of document numbers. Multiple 
numbers separated by spaces may be specified
or ranges separated by hyphens.
 
 
d477 1
a477 2
 
 
d480 2
a481 1
.TP 
d483 8
a490 8
This specifies the string that will be used to separate 
documents when they are displayed for `ranked' or 
`approx-ranked' queries. The standard C escape character 
sequences may be used to place special
characters in the string. For example, a newline would the
`\en'. To include a `%' use the sequence `%%'. To include the
MG document number use the sequence `%n'. To include the
document weight use the sequence `%w'.
d493 5
a497 4
If this is true then various numbers are output at the end
of each query indicating what went on during the query. 
This parameter may take the values
.IR yes ", " no ", " 
d500 1
a500 1
.TP 
d502 2
a503 2
If this parameter is set then during ranked queries on skipped
inverted files when 
d505 3
a507 2
is set to 
.IR splay_tree , hash_table ,
d509 6
a514 6
.I list a file will be produced in the current
directory. The name of the file is the value of this parameter,
a `%d' in the file name will be replaced with the process id of
mgquery. This file will contain information about the usage of
skips during the query processing. This option is expensive; 
use 
d517 1
a517 1
.TP 
d519 10
a528 7
This specifies whether of not the terms should be sorted into
decreasing occurrence in documents so that the least often
occurring terms are processed first when ranked queries are
being done. When this is true the terms are sorted. When this
is false the terms are not sorted and are instead processed in
order of occurrence. This parameter may take the values
.IR yes ", " no ", " 
d531 1
a531 1
.TP 
d534 1
a534 1
accumulators set by 
d536 8
a543 5
is reached. When this
is true the processing of terms is stopped at the completion
of the current term. When this is false processing continues but
no new accumulators are created. This parameter may take the values
.IR yes ", " no ", " 
d546 1
a546 1
.TP 
d548 6
a553 6
This specifies the string that will be output after the last
document from the previous query has been output. The standard
C escape character sequences may be used to
place special characters in the string. For example, a newline
would the `\en'. To include a `%' use the sequence `%%'.
.TP 
d555 5
a559 3
If this is true then the time to process a query is displayed
in both real time and CPU time. This parameter may take the values
.IR yes ", " no ", " 
d564 3
a566 3
This is a boolean parameter that determines whether the program
should attempt to do a regular expression match on the retrieved
text. If verbatim is 
d568 20
a587 16
and a post-processing string is specified
with the query then the post-processing string will be searched for
in the documents just before they are displayed. If the string is
found the document will be displayed, if not the document will not
be displayed. If verbatim is 
.I off
the post-processing string will
be considered a regular expression like in 
.B vi " or " egrep .
E.G. If verbatim is 
.I on, \*(lq\fBand.*the\fP\*(rq will look for the 8 character
sequence \*(lq\fBand.*the\fP\*(rq. If verbatim is `off', \*(lq\fBand.*the\fP\*(rq will
look for the sequence \*(lq\fBand\fP\*(rq followed somewhere later in the
document by the sequence \*(lq\fBthe\fP\*(rq.
This parameter may take the values
.IR yes ", " no ", " 
a589 2


d591 1
a591 1
.TP
d593 8
a600 6
If this environment variable exists then its value is used as the default 
directory where the mg collection files may be found. If this variable does 
not exist then the directory \*(lq\fB.\fP\*(rq is used by default. The command
line option 
.BI \-d directory
overrides the directory in 
a602 1
.PD 0
d604 1
a604 1
.B .mgrc
d609 1
a609 1
Help file for 
d611 1
a611 1
The contents of this file is displayed with the 
d616 1
a616 1
Inverted file
d619 1
a619 1
The \*(lq\fBon disk\fP\*(rq stemmed dictionary.
d636 2
a637 1
.LP
d639 1
a643 1
.BR mg_make_fast_dict (1),
d657 3
a659 1
.BR mgticstat (1)
@


1.1
log
@Initial revision
@
text
@d190 1
a190 1
This is a boolean parameter that determines whether the the
d486 1
a486 1
is true the the processing of terms is stopped at the completion
@
